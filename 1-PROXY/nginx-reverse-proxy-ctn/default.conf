# Dans ce microservice on configure pour recevoir à la fois les requêtes api (api.sirr.express) pour le bon fonctionnement du service
# et à la fois pour servir le frontend au client

server {
    listen 80;
    server_name sirr.express www.sirr.express;
    return 301 https://$host$request_uri;
}


server {
    listen 80;
    server_name api.sirr.express;
    return 301 https://$host$request_uri;
}

# pour le client on renvoie au microservice frontend-ctn qui appartient à la famille 5-FRONTEND

server {
    listen 443 ssl http2;
    server_name sirr.express www.sirr.express;

    ssl_certificate /etc/ssl/certs/fullchain.pem;
    ssl_certificate_key /etc/ssl/certs/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;


    location / {
        proxy_pass http://frontend-ctn:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    error_page 404 = /;
}

# et pour l'application (on passe par le sous domaine api.sirr.express) on s'addresse soit au microservice 
# gateway-ctn pour tout ce qui est de récupérer une conversation, entrer un message
# ou websocket-ctn qui sert à afficher les messages en temps réel sur la conversation

server {
    listen 443 ssl http2;
    server_name api.sirr.express;

    ssl_certificate /etc/ssl/certs/api_sirr_express_fullchain.pem;
    ssl_certificate_key /etc/ssl/certs/api_sirr_express_privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    location / {
        proxy_pass http://gateway-ctn:8080;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /ws {
        proxy_pass http://websocket-ctn:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_read_timeout 86400;
    }
}
